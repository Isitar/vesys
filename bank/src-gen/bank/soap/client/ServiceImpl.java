
package bank.soap.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServiceImpl", targetNamespace = "http://soap.bank/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceImpl {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOwner", targetNamespace = "http://soap.bank/", className = "bank.soap.client.GetOwner")
    @ResponseWrapper(localName = "getOwnerResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.GetOwnerResponse")
    @Action(input = "http://soap.bank/ServiceImpl/getOwnerRequest", output = "http://soap.bank/ServiceImpl/getOwnerResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/getOwner/Fault/IOException")
    })
    public String getOwner(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws IOException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccountNumbers", targetNamespace = "http://soap.bank/", className = "bank.soap.client.GetAccountNumbers")
    @ResponseWrapper(localName = "getAccountNumbersResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.GetAccountNumbersResponse")
    @Action(input = "http://soap.bank/ServiceImpl/getAccountNumbersRequest", output = "http://soap.bank/ServiceImpl/getAccountNumbersResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/getAccountNumbers/Fault/IOException")
    })
    public List<String> getAccountNumbers()
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws InactiveException_Exception
     * @throws OverdrawException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "withdraw", targetNamespace = "http://soap.bank/", className = "bank.soap.client.Withdraw")
    @ResponseWrapper(localName = "withdrawResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.WithdrawResponse")
    @Action(input = "http://soap.bank/ServiceImpl/withdrawRequest", output = "http://soap.bank/ServiceImpl/withdrawResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/withdraw/Fault/IOException"),
        @FaultAction(className = OverdrawException_Exception.class, value = "http://soap.bank/ServiceImpl/withdraw/Fault/OverdrawException"),
        @FaultAction(className = InactiveException_Exception.class, value = "http://soap.bank/ServiceImpl/withdraw/Fault/InactiveException")
    })
    public void withdraw(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1)
        throws IOException_Exception, InactiveException_Exception, OverdrawException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createAccount", targetNamespace = "http://soap.bank/", className = "bank.soap.client.CreateAccount")
    @ResponseWrapper(localName = "createAccountResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.CreateAccountResponse")
    @Action(input = "http://soap.bank/ServiceImpl/createAccountRequest", output = "http://soap.bank/ServiceImpl/createAccountResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/createAccount/Fault/IOException")
    })
    public String createAccount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns double
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBalance", targetNamespace = "http://soap.bank/", className = "bank.soap.client.GetBalance")
    @ResponseWrapper(localName = "getBalanceResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.GetBalanceResponse")
    @Action(input = "http://soap.bank/ServiceImpl/getBalanceRequest", output = "http://soap.bank/ServiceImpl/getBalanceResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/getBalance/Fault/IOException")
    })
    public double getBalance(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isActive", targetNamespace = "http://soap.bank/", className = "bank.soap.client.IsActive")
    @ResponseWrapper(localName = "isActiveResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.IsActiveResponse")
    @Action(input = "http://soap.bank/ServiceImpl/isActiveRequest", output = "http://soap.bank/ServiceImpl/isActiveResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/isActive/Fault/IOException")
    })
    public boolean isActive(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws IOException_Exception
     */
    @WebMethod(operationName = "AccountExists")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AccountExists", targetNamespace = "http://soap.bank/", className = "bank.soap.client.AccountExists")
    @ResponseWrapper(localName = "AccountExistsResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.AccountExistsResponse")
    @Action(input = "http://soap.bank/ServiceImpl/AccountExistsRequest", output = "http://soap.bank/ServiceImpl/AccountExistsResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/AccountExists/Fault/IOException")
    })
    public boolean accountExists(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws InactiveException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deposit", targetNamespace = "http://soap.bank/", className = "bank.soap.client.Deposit")
    @ResponseWrapper(localName = "depositResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.DepositResponse")
    @Action(input = "http://soap.bank/ServiceImpl/depositRequest", output = "http://soap.bank/ServiceImpl/depositResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/deposit/Fault/IOException"),
        @FaultAction(className = InactiveException_Exception.class, value = "http://soap.bank/ServiceImpl/deposit/Fault/InactiveException")
    })
    public void deposit(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1)
        throws IOException_Exception, InactiveException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setActive", targetNamespace = "http://soap.bank/", className = "bank.soap.client.SetActive")
    @ResponseWrapper(localName = "setActiveResponse", targetNamespace = "http://soap.bank/", className = "bank.soap.client.SetActiveResponse")
    @Action(input = "http://soap.bank/ServiceImpl/setActiveRequest", output = "http://soap.bank/ServiceImpl/setActiveResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://soap.bank/ServiceImpl/setActive/Fault/IOException")
    })
    public boolean setActive(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        boolean arg1)
        throws IOException_Exception
    ;

}
